<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.demo.dao.GoodsTypeMapper">

    <resultMap type="com.project.demo.entity.GoodsType" id="GoodsTypeResult">
        <result property="typeId"    column="type_id"    />
        <result property="fatherId"    column="father_id"    />
        <result property="name"    column="name"    />
        <result property="desc"    column="desc"    />
        <result property="icon"    column="icon"    />
        <result property="sourceTable"    column="source_table"    />
        <result property="sourceField"    column="source_field"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectGoodsTypeVo">
        select type_id, father_id, name, desc, icon, source_table, source_field, create_time, update_time from goods_type
    </sql>

    <select id="selectGoodsTypeList" parameterType="com.project.demo.entity.GoodsType" resultMap="GoodsTypeResult">
        <include refid="selectGoodsTypeVo"/>
        <where>
            <if test="fatherId != null "> and father_id = #{fatherId}</if>
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="desc != null  and desc != ''"> and desc = #{desc}</if>
            <if test="icon != null  and icon != ''"> and icon = #{icon}</if>
            <if test="sourceTable != null  and sourceTable != ''"> and source_table = #{sourceTable}</if>
            <if test="sourceField != null  and sourceField != ''"> and source_field = #{sourceField}</if>
        </where>
    </select>

    <select id="selectGoodsTypeById" parameterType="Long" resultMap="GoodsTypeResult">
        <include refid="selectGoodsTypeVo"/>
        where type_id = #{typeId}
    </select>

    <insert id="insertGoodsType" parameterType="com.project.demo.entity.GoodsType" useGeneratedKeys="true" keyProperty="typeId">
        insert into goods_type
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="fatherId != null ">father_id,</if>
            <if test="name != null  and name != ''">name,</if>
            <if test="desc != null  and desc != ''">desc,</if>
            <if test="icon != null  and icon != ''">icon,</if>
            <if test="sourceTable != null  and sourceTable != ''">source_table,</if>
            <if test="sourceField != null  and sourceField != ''">source_field,</if>
            <if test="createTime != null ">create_time,</if>
            <if test="updateTime != null ">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="fatherId != null ">#{fatherId},</if>
            <if test="name != null  and name != ''">#{name},</if>
            <if test="desc != null  and desc != ''">#{desc},</if>
            <if test="icon != null  and icon != ''">#{icon},</if>
            <if test="sourceTable != null  and sourceTable != ''">#{sourceTable},</if>
            <if test="sourceField != null  and sourceField != ''">#{sourceField},</if>
            <if test="createTime != null ">#{createTime},</if>
            <if test="updateTime != null ">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateGoodsType" parameterType="com.project.demo.entity.GoodsType">
        update goods_type
        <trim prefix="SET" suffixOverrides=",">
            <if test="fatherId != null ">father_id = #{fatherId},</if>
            <if test="name != null  and name != ''">name = #{name},</if>
            <if test="desc != null  and desc != ''">desc = #{desc},</if>
            <if test="icon != null  and icon != ''">icon = #{icon},</if>
            <if test="sourceTable != null  and sourceTable != ''">source_table = #{sourceTable},</if>
            <if test="sourceField != null  and sourceField != ''">source_field = #{sourceField},</if>
            <if test="createTime != null ">create_time = #{createTime},</if>
            <if test="updateTime != null ">update_time = #{updateTime},</if>
        </trim>
        where type_id = #{typeId}
    </update>

    <delete id="deleteGoodsTypeById" parameterType="Long">
        delete from goods_type where type_id = #{typeId}
    </delete>

    <delete id="deleteGoodsTypeByIds" parameterType="String">
        delete from goods_type where type_id in
        <foreach item="typeId" collection="array" open="(" separator="," close=")">
            #{typeId}
        </foreach>
    </delete>

</mapper>
